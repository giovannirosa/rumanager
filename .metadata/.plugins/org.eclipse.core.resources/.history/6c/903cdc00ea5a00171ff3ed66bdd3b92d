package view.pane;

import javafx.scene.control.Label;
import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.control.TextField;
import javafx.scene.control.TextFormatter;
import view.Main;
import view.table.ItemTable;
import view.tabs.ItemTab;
import view.utils.Factory;
import view.utils.IngUtilPane;
import view.utils.UtilPane;
import model.*;
import model.table.TIngModel;
import model.table.TableModel;

public class ItemPane extends UtilPane {
	Label idLabel = new Label("ID:");
	Label nomeLabel = new Label("Nome:");
	Label qtdeLabel = new Label("Quantidade:");
	Label unidadeLabel = new Label("Unidade:");
	Label precoLabel = new Label("Preço:");
	
	TextField idField = new TextField();
	TextField nomeField = new TextField();
	Spinner<Integer> qtdeSpin = new Spinner<>();
	TextField unidadeField = new TextField();
	TextField precoField = new TextField();
	
	public ItemPane(ItemTable table, ItemTab tab) {
		super(table,tab);
		
		SpinnerValueFactory<Integer> svf = new SpinnerValueFactory.IntegerSpinnerValueFactory(0, 1000, 0);
		qtdeSpin.setValueFactory(svf);
		qtdeSpin.setEditable(true);
		TextFormatter<Integer> formatter = new TextFormatter<>(svf.getConverter(), svf.getValue());
		qtdeSpin.getEditor().setTextFormatter(formatter);
		svf.valueProperty().bindBidirectional(formatter.valueProperty());
		
		setControl(Main.ingControl);
	}
	
	private boolean validate() {
		if (nomeField.getText().isEmpty()) {
			Factory.showWarning("Por favor entre com o nome!");
			return false;
		}
		if (unidadeField.getText().isEmpty()) {
			Factory.showWarning("Por favor entre com a unidade!");
			return false;
		}
		if (precoField.getText().isEmpty()) {
			Factory.showWarning("Por favor entre com o preço!");
			return false;
		}
		return true;
	}
	
	public void addMode() {
		inputPane.getChildren().clear();
		inputPane.add(nomeLabel, 0, 0);
		inputPane.add(nomeField, 1, 0);
		inputPane.add(qtdeLabel, 0, 1);
		inputPane.add(qtdeSpin, 1, 1);
		inputPane.add(unidadeLabel, 0, 2);
		inputPane.add(unidadeField, 1, 2);
		inputPane.add(precoLabel, 0, 3);
		inputPane.add(precoField, 1, 3);
		
		confirmBut.setOnAction(e -> {			
			if (!validate())
				return;
			
			int id;
			if (table.getItems().isEmpty() || table.getItems().get(0).getId().equals(""))
				id = 0;
			else
				id = Integer.parseInt(table.getItems().get(table.getItems().size()-1).getId());
			
			Item i = new Item(id+1,nomeField.getText(),qtdeSpin.getValue(),
					unidadeField.getText(),Double.parseDouble(precoField.getText()));
			
			insert(i);
			Main.ingControl.refreshBox(IngUtilPane.ingBox);
//			Main.ingControl.refreshBoxCombo(Screen.storageTab.getPane().ingBox);
//			Main.ingControl.refreshBoxCombo(Screen.ingTab.getComboPane().ingBox);
//			String log = Screen.userControl.getUser().getName()+" added "+i.getDesc()+" to ings!";
//			System.out.println(log);
//			Factory.log(log);
			
			this.close();
		});
	}
	
	public void editMode(TableModel abstractModel) {
		TIngModel model = (TIngModel) abstractModel;
		idField.setText(model.getId());
		idField.setDisable(true);
		
		nomeField.setText(model.getName());
		qtdeSpin.getValueFactory().setValue(Integer.parseInt(model.getQtde()));
		unidadeField.setText(model.getUnidade());
		
		inputPane.getChildren().clear();
		inputPane.add(idLabel, 0, 0);
		inputPane.add(idField, 1, 0);
		inputPane.add(nomeLabel, 0, 1);
		inputPane.add(nomeField, 1, 1);
		inputPane.add(qtdeLabel, 0, 2);
		inputPane.add(qtdeSpin, 1, 2);
		inputPane.add(unidadeLabel, 0, 3);
		inputPane.add(unidadeField, 1, 3);
		inputPane.add(precoLabel, 0, 4);
		inputPane.add(precoField, 1, 4);
		
		confirmBut.setOnAction(e -> {			
			if (!validate())
				return;
			
			Item i = new Item(Integer.parseInt(model.getId()),nomeField.getText(),
					qtdeSpin.getValue(),unidadeField.getText(),Double.parseDouble(precoField.getText()));
			
			insert(i);
			Main.ingControl.refreshBox(IngUtilPane.ingBox);
//			Main.ingControl.refreshBoxCombo(Main.storageTab.getPane().ingBox);
//			Main.ingControl.refreshBoxCombo(Main.ingTab.getComboPane().ingBox);
//			Factory.log("");
			
			this.close();
		});
	}
	
	public void clear() {
		nomeField.clear();
		qtdeSpin.getValueFactory().setValue(0);
		unidadeField.clear();
	}
}
